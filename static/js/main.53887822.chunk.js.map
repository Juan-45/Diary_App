{"version":3,"sources":["components/Header/style.js","components/Header/index.js","utils/setDateTimeFormatForInput.js","utils/setGlobalDateTimeFormat.js","components/LightSpinner/index.js","components/PDFLayout/Footer.js","components/PDFLayout/Header.js","components/PDFLayout/Narration.js","components/PDFLayout/index.js","containers/DownloadPDF.js","containers/Form/style.js","containers/Form/useInput.js","containers/Form/index.js","theme.js","assets/images/mountainPath.jpg","App/style.js","App/index.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","headerText","fontFamily","fontStyle","fontWeight","header","paddingTop","paddingBottom","Header","ref","className","classes","Grid","container","direction","alignItems","clsx","Typography","align","variant","color","React","forwardRef","setTwoDigitsDateFormat","number","toString","padStart","setGlobalDateTimeFormat","value","splittedDate","split","year","month","day","time","LightSipinner","styles","StyleSheet","create","footerSection","backgroundColor","borderTop","position","bottom","width","height","footerSectionText","top","right","fontSize","Footer","fixed","style","render","pageNumber","totalPages","paddingHorizontal","borderBottom","marginBottom","headerMainText","textDecoration","textDecorationColor","headerSecondaryText","headerTextFirstRow","dateTime","text","narrationSection","paddingLeft","narrationText","Narration","page","bodySection","display","flexDirection","PDFLayout","data","result","narration","title","author","subject","creator","pdfVersion","size","wrap","spinnerContainer","marginRight","DownloadPDF","PDFFileData","usePDF","document","instance","url","LightSpinner","error","Button","download","href","onClick","formContainer","resultInputContainer","narrationInputContainer","mainInputs","textAreaContainer","maxHeight","overflowY","buttonContainer","useInput","setIsPDFRequested","initialValue","withOutDebounce","useState","state","setState","defaultOnChangeHandler","onChangeHandlerDebounced","useDebouncedCallback","trailing","Form","isPDFFileRequested","setIsPDFFileRequested","isResultRequiredError","setIsResultRequiredError","isNarrationRequiredError","setIsNarrationRequiredError","isDateTimeRequiredError","setDateTimeRequiredError","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","setDateTimeFormatForInput","dateTimeInputValue","dateTimeInputHandler","resultInputValue","resultInputHandler","narrationInputValue","narrationInputHandler","formDataObj","isRequiredFieldErrorSettedRef","useRef","setRefValue","useCallback","refVariable","bool","current","formValidator","inputValidator","inputValue","setErrorState","setErrorSettedRef","areAllInputValuesNotAnEmptyString","valuesArr","notEqualTo","i","length","valuesChecker","useEffect","item","xs","md","TextField","type","label","onChange","event","target","helperText","multiline","minRows","justifyContent","margin","InputLabelProps","shrink","theme","createTheme","palette","primary","main","secondary","typography","h6","overrides","MuiButton","outlinedSizeSmall","containedSizeSmall","MuiFilledInput","root","MuiInputBase","MuiFormLabel","app","minWidth","minHeight","textAlign","background","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","body","breakpoints","up","formTransition","opacity","headerTransition","App","formRef","headerRef","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53887822.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  headerText: {\r\n    fontFamily: 'Roboto',\r\n    fontStyle: 'italic',\r\n    fontWeight: 'bold',\r\n  },\r\n  header: {\r\n    paddingTop: '25px',\r\n    paddingBottom: '25px',\r\n  },\r\n});\r\n\r\nexport { useStyles };\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nimport { useStyles } from './style';\r\n\r\nconst Header = ({ className }, ref) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"flex-start\"\r\n      className={clsx(classes.header, className)}\r\n      ref={ref}\r\n    >\r\n      <Typography align=\"left\" variant=\"h5\" className={classes.headerText} color=\"primary\">\r\n        Para una aliada de nuestra escuela de Kung Fu Wu Shu Xin Fei.\r\n      </Typography>\r\n      <Typography align=\"left\" variant=\"h6\" className={classes.headerText} color=\"primary\">\r\n        Hay solo dos grandes equivocaciones que se pueden cometer en el camino para lograr la\r\n        maestria de uno mismo, no comenzar y no ir todo el camino.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(Header);\r\n","const setTwoDigitsDateFormat = (number) => number.toString().padStart(2, '0');\r\nconst setDateTimeFormatForInput = (date = new Date()) =>\r\n  `${date.getFullYear()}-${setTwoDigitsDateFormat(date.getMonth() + 1)}-${setTwoDigitsDateFormat(\r\n    date.getDate()\r\n  )}T${setTwoDigitsDateFormat(date.getHours())}:${setTwoDigitsDateFormat(date.getMinutes())}`;\r\n\r\nexport { setDateTimeFormatForInput };\r\n","const setGlobalDateTimeFormat = (value) => {\r\n  const firstSeparatorCharacter = '-';\r\n  const secondSeparatorCharacter = 'T';\r\n  const splittedDate = value.split(firstSeparatorCharacter);\r\n\r\n  const year = splittedDate[0];\r\n  const month = splittedDate[1];\r\n\r\n  const day = splittedDate[2] ? splittedDate[2].split(secondSeparatorCharacter)[0] : '';\r\n  const time = splittedDate[2] ? splittedDate[2].split(secondSeparatorCharacter)[1] : '';\r\n\r\n  const dateTimeFormatted = `${day}/${month}/${year} ${time}`;\r\n  return dateTimeFormatted;\r\n};\r\n\r\nexport { setGlobalDateTimeFormat };\r\n","import './style.css';\r\n\r\nconst LightSipinner = () => <div className=\"lds-dual-ring\"></div>;\r\n\r\nexport default LightSipinner;\r\n","import { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  footerSection: {\r\n    backgroundColor: '#ffd29b',\r\n    borderTop: '2mm solid #c3bee9',\r\n    position: 'absolute',\r\n    bottom: '0mm',\r\n    width: '100%',\r\n    height: '13mm',\r\n  },\r\n  footerSectionText: {\r\n    position: 'absolute',\r\n    top: '3mm',\r\n    right: '25mm',\r\n    fontSize: '4mm',\r\n    fontFamily: 'Helvetica-Oblique',\r\n  },\r\n});\r\n\r\nconst Footer = () => (\r\n  <View fixed style={styles.footerSection}>\r\n    <Text\r\n      style={styles.footerSectionText}\r\n      render={({ pageNumber, totalPages }) => `Página ${pageNumber} de ${totalPages}.`}\r\n    />\r\n  </View>\r\n);\r\n\r\nexport default Footer;\r\n","import { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    width: '100%',\r\n    paddingHorizontal: '28mm',\r\n    paddingTop: '10mm',\r\n    paddingBottom: '5mm',\r\n    backgroundColor: '#ffd29b',\r\n    borderBottom: '3mm solid #c3bee9',\r\n    marginBottom: '3mm',\r\n  },\r\n  headerMainText: {\r\n    color: '#000000',\r\n    fontFamily: 'Helvetica-Oblique',\r\n    fontSize: '6mm',\r\n    textDecoration: 'underline',\r\n    textDecorationColor: '#000000',\r\n  },\r\n  headerSecondaryText: {\r\n    color: '#000000',\r\n    fontFamily: 'Helvetica-Oblique',\r\n    fontSize: '5mm',\r\n    textDecoration: 'underline',\r\n    textDecorationColor: '#000000',\r\n  },\r\n  headerTextFirstRow: {\r\n    marginBottom: '4mm',\r\n  },\r\n});\r\n\r\nconst Header = ({ dateTime, text }) => (\r\n  <View style={styles.header} fixed>\r\n    <View style={styles.headerTextFirstRow}>\r\n      <Text style={styles.headerMainText}>{`Entrada ${dateTime} Hs`}</Text>\r\n    </View>\r\n    <Text style={styles.headerSecondaryText}>{`Resultado: ${text}`}</Text>\r\n  </View>\r\n);\r\n\r\nexport default Header;\r\n","import { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  narrationSection: {\r\n    width: '100%',\r\n    paddingLeft: '2mm',\r\n  },\r\n  narrationText: {\r\n    color: '#000000',\r\n    fontFamily: 'Helvetica',\r\n    fontSize: '4mm',\r\n  },\r\n});\r\n\r\nconst Narration = ({ text }) => (\r\n  <View style={styles.narrationSection}>\r\n    <Text style={styles.narrationText}>{text}</Text>\r\n  </View>\r\n);\r\n\r\nexport default Narration;\r\n","import { Page, View, Document, StyleSheet } from '@react-pdf/renderer';\r\n\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport Narration from './Narration';\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    paddingBottom: '18mm',\r\n  },\r\n  bodySection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    paddingHorizontal: '25mm',\r\n    paddingBottom: '25mm',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst PDFLayout = ({ data }) => {\r\n  const { dateTime, result, narration } = data;\r\n\r\n  return (\r\n    <Document\r\n      title={`Entrada ${dateTime} - ${result}`}\r\n      author=\"Jose\"\r\n      subject=\"Diario de guerrero.\"\r\n      creator=\"Diary-App by Herrera Juan José FrontEnd Engineer\"\r\n      pdfVersion=\"1.7\"\r\n    >\r\n      <Page size=\"A4\" style={styles.page} wrap>\r\n        <Header dateTime={dateTime} text={result} />\r\n        <View style={styles.bodySection}>\r\n          <Narration text={narration} />\r\n        </View>\r\n        <Footer />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PDFLayout;\r\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { usePDF } from '@react-pdf/renderer';\r\n\r\nimport LightSpinner from '../components/LightSpinner/';\r\nimport PDFLayout from '../components/PDFLayout/';\r\n\r\nconst useStyles = makeStyles({\r\n  spinnerContainer: {\r\n    width: 'fit-content',\r\n    marginRight: '80px',\r\n  },\r\n});\r\n\r\nconst DownloadPDF = ({ PDFFileData }) => {\r\n  const classes = useStyles();\r\n  const { dateTime, result } = PDFFileData;\r\n  const [instance] = usePDF({ document: <PDFLayout data={PDFFileData} /> });\r\n\r\n  if (instance.url === null) {\r\n    return (\r\n      <Grid container alignItems=\"flex-start\" className={classes.spinnerContainer}>\r\n        <LightSpinner />\r\n      </Grid>\r\n    );\r\n  } else if (instance.error) {\r\n    return <Typography>Ocurrio un error, vuelva a intentar descargar el archivo.</Typography>;\r\n  } else\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        color=\"secondary\"\r\n        download={`Entrada ${dateTime} - ${result}`}\r\n        href={instance.url}\r\n        onClick={() => true}\r\n      >\r\n        Descargar PDF\r\n      </Button>\r\n    );\r\n};\r\nexport default DownloadPDF;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  formContainer: {\r\n    paddingTop: '25px',\r\n    paddingBottom: '25px',\r\n  },\r\n  resultInputContainer: {\r\n    marginBottom: '25px',\r\n  },\r\n  narrationInputContainer: {\r\n    marginBottom: '55px',\r\n  },\r\n  mainInputs: {\r\n    width: '100%',\r\n  },\r\n  textAreaContainer: {\r\n    maxHeight: '300px',\r\n    overflowY: 'auto',\r\n  },\r\n  buttonContainer: {\r\n    width: 'fit-content',\r\n  },\r\n});\r\n\r\nexport { useStyles };\r\n","import { useState } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useInput = (setIsPDFRequested, initialValue, withOutDebounce) => {\r\n  const [state, setState] = useState(() => (initialValue ? initialValue : ''));\r\n\r\n  const defaultOnChangeHandler = (value) => {\r\n    setState(value);\r\n    setIsPDFRequested(false);\r\n  };\r\n  const onChangeHandlerDebounced = useDebouncedCallback(defaultOnChangeHandler, 200, {\r\n    trailing: true,\r\n  });\r\n  const onChangeHandler = withOutDebounce ? defaultOnChangeHandler : onChangeHandlerDebounced;\r\n  return [state, onChangeHandler];\r\n};\r\n\r\nexport default useInput;\r\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\nimport { setDateTimeFormatForInput } from '../../utils/setDateTimeFormatForInput';\r\nimport { setGlobalDateTimeFormat } from '../../utils/setGlobalDateTimeFormat';\r\nimport DownloadPDF from '../DownloadPDF';\r\nimport { useStyles } from './style';\r\nimport useInput from './useInput';\r\n\r\nconst Form = ({ className }, ref) => {\r\n  const classes = useStyles();\r\n\r\n  const [isPDFFileRequested, setIsPDFFileRequested] = useState(false);\r\n  const [isResultRequiredError, setIsResultRequiredError] = useState(false);\r\n  const [isNarrationRequiredError, setIsNarrationRequiredError] = useState(false);\r\n  const [isDateTimeRequiredError, setDateTimeRequiredError] = useState(false);\r\n\r\n  const [dateTimeInputValue, dateTimeInputHandler] = useInput(\r\n    setIsPDFFileRequested,\r\n    setDateTimeFormatForInput(),\r\n    true\r\n  );\r\n  const [resultInputValue, resultInputHandler] = useInput(setIsPDFFileRequested);\r\n  const [narrationInputValue, narrationInputHandler] = useInput(setIsPDFFileRequested);\r\n  const formDataObj = {\r\n    dateTime: setGlobalDateTimeFormat(dateTimeInputValue),\r\n    result: resultInputValue,\r\n    narration: narrationInputValue,\r\n  };\r\n\r\n  let isRequiredFieldErrorSettedRef = useRef(false);\r\n\r\n  const setRefValue = useCallback((refVariable, bool) => (refVariable.current = bool), []);\r\n  const formValidator = useCallback(() => {\r\n    const inputValidator = (inputValue, setErrorState, setErrorSettedRef) => {\r\n      if (inputValue === '') {\r\n        setErrorState(true);\r\n        setErrorSettedRef(isRequiredFieldErrorSettedRef, true);\r\n      } else {\r\n        setErrorState(false);\r\n      }\r\n    };\r\n    inputValidator(resultInputValue, setIsResultRequiredError, setRefValue);\r\n    inputValidator(narrationInputValue, setIsNarrationRequiredError, setRefValue);\r\n    inputValidator(dateTimeInputValue, setDateTimeRequiredError, setRefValue);\r\n  }, [resultInputValue, narrationInputValue, dateTimeInputValue, setRefValue]);\r\n\r\n  const pDFCreatorButtonHandler = (validator, refVariable) => {\r\n    validator();\r\n    if (!refVariable.current) {\r\n      setIsPDFFileRequested(true);\r\n    }\r\n  };\r\n\r\n  const areAllInputValuesNotAnEmptyString = useCallback(() => {\r\n    const inputValues = [resultInputValue, narrationInputValue, dateTimeInputValue];\r\n    const valuesChecker = (valuesArr, notEqualTo) => {\r\n      for (let i = 0; i < valuesArr.length; i++) {\r\n        if (valuesArr[i] === notEqualTo) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    return valuesChecker(inputValues, '');\r\n  }, [resultInputValue, narrationInputValue, dateTimeInputValue]);\r\n\r\n  useEffect(() => {\r\n    if (areAllInputValuesNotAnEmptyString()) {\r\n      setRefValue(isRequiredFieldErrorSettedRef, false);\r\n      formValidator();\r\n    } else if (isRequiredFieldErrorSettedRef.current === true) {\r\n      formValidator();\r\n    }\r\n  }, [areAllInputValuesNotAnEmptyString, formValidator, setRefValue]);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={clsx(classes.formContainer, className)} ref={ref}>\r\n      <Grid container className={classes.resultInputContainer}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Resultado\"\r\n            variant=\"filled\"\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            className={classes.mainInputs}\r\n            onChange={(event) => resultInputHandler(event.target.value)}\r\n            error={isResultRequiredError}\r\n            helperText={isResultRequiredError ? 'Campo Requerido.' : null}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={clsx(classes.textAreaContainer, classes.narrationInputContainer)}>\r\n        <TextField\r\n          type=\"text\"\r\n          label=\"Relato\"\r\n          variant=\"filled\"\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          className={classes.mainInputs}\r\n          multiline={true}\r\n          minRows={12}\r\n          onChange={(event) => narrationInputHandler(event.target.value)}\r\n          error={isNarrationRequiredError}\r\n          helperText={isNarrationRequiredError ? 'Campo Requerido.' : null}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid container justifyContent=\"space-between\" wrap=\"nowrap\">\r\n        <TextField\r\n          type=\"datetime-local\"\r\n          label=\"Fecha y hora\"\r\n          variant=\"filled\"\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          margin=\"none\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={dateTimeInputValue}\r\n          onChange={(event) => dateTimeInputHandler(event.target.value)}\r\n          error={isDateTimeRequiredError}\r\n          helperText={isDateTimeRequiredError ? 'Campo Requerido.' : null}\r\n        />\r\n        <Grid container className={classes.buttonContainer}>\r\n          {!isPDFFileRequested ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              onClick={() => pDFCreatorButtonHandler(formValidator, isRequiredFieldErrorSettedRef)}\r\n            >\r\n              Procesar PDF\r\n            </Button>\r\n          ) : null}\r\n        </Grid>\r\n        {isPDFFileRequested ? <DownloadPDF PDFFileData={formDataObj} /> : null}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default React.forwardRef(Form);\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      //dark background\r\n      main: '#484848',\r\n    },\r\n    secondary: {\r\n      //border color\r\n      main: '#6352e2c2',\r\n    },\r\n    error: {\r\n      main: '#ff1604',\r\n    },\r\n  },\r\n});\r\n\r\ntheme.typography.h6 = { fontSize: '1.1rem' };\r\n\r\ntheme.overrides = {\r\n  MuiButton: {\r\n    outlinedSizeSmall: {\r\n      fontWeight: '600',\r\n    },\r\n    containedSizeSmall: {\r\n      fontSize: '1.1rem',\r\n    },\r\n  },\r\n  MuiFilledInput: {\r\n    root: {\r\n      '&.Mui-focused': {\r\n        backgroundColor: '#fff7ede3',\r\n      },\r\n      backgroundColor: '#fff7ede3',\r\n    },\r\n  },\r\n  MuiInputBase: {\r\n    root: {\r\n      fontSize: '1.1rem',\r\n    },\r\n  },\r\n  MuiFormLabel: {\r\n    root: {\r\n      fontSize: '1.1rem',\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","export default __webpack_public_path__ + \"static/media/mountainPath.7c6b82c6.jpg\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport backgroundImage from '../assets/images/mountainPath.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  app: {\r\n    height: '100%',\r\n    margin: '0',\r\n    minWidth: '600px',\r\n    minHeight: '500px',\r\n    textAlign: 'center',\r\n    background: `linear-gradient(180deg, rgb(36 19 173 / 28%), rgb(255 255 255 / 0%) 55%), linear-gradient(0deg, rgb(255 141 0 / 40%), rgb(255 255 255 / 0%) 50%), url(${backgroundImage})`,\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'contain',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n  body: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '85%',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '70%',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '60%',\r\n    },\r\n  },\r\n  formTransition: {\r\n    opacity: '0',\r\n    ['-moz-transition']: 'opacity 2s linear 1.8s',\r\n    ['-webkit-transition']: 'opacity 2s linear 1.8s',\r\n    ['-o-transition']: 'opacity 2s linear 1.8s',\r\n    transition: 'opacity 2s linear 1.8s',\r\n    '&.loaded': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  headerTransition: {\r\n    opacity: '0',\r\n    ['-moz-transition']: 'opacity 1.5s ease-in 0.5s',\r\n    ['-webkit-transition']: 'opacity 1.5s ease-in 0.5s',\r\n    ['-o-transition']: 'opacity 1.5s ease-in 0.5s',\r\n    transition: 'opacity 1.5s ease-in 0.5s',\r\n    '&.loaded': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n}));\r\n\r\nexport { useStyles };\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { useRef, useEffect } from 'react';\r\n\r\nimport Header from '../components/Header';\r\nimport Form from '../containers/Form';\r\nimport theme from '../theme';\r\nimport { useStyles } from './style';\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  let formRef = useRef();\r\n  let headerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    formRef.current.className += ' loaded';\r\n    headerRef.current.className += ' loaded';\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      <ThemeProvider theme={theme}>\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid container direction=\"column\" className={classes.body}>\r\n            <Header className={classes.headerTransition} ref={headerRef} />\r\n            <Form className={classes.formTransition} ref={formRef} />\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App/';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}